version: '3.4'

x-app: &app-common
  build:
    context: .
    dockerfile: .docker/services/php/Dockerfile
    target: production
    args:
      - USER_UID=${USER_UID:-1000}
      - USER_GID=${USER_GID:-1000}
  volumes:
    - .:/var/www/html
  restart: unless-stopped

services:
  reverse-proxy:
    image: traefik:v2.4
    command:
      - --providers.docker=true
      - --providers.docker.swarmMode=false
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.letsencript-resolver.acme.email=maksym.haiduk@gmail.com
      - --certificatesresolvers.letsencript-resolver.acme.storage=acme.json
      - --certificatesresolvers.letsencript-resolver.acme.httpchallenge.entrypoint=web
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role == manager
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  web-server:
    build:
      context: .
      dockerfile: ./.docker/services/nginx/Dockerfile
      target: production
    restart: unless-stopped
    depends_on:
      - app
    labels:
      - traefik.http.services.web-server.loadbalancer.server.port=80
      - traefik.enable=true
      - traefik.http.routers.web-server.tls=true
      - traefik.http.routers.web-server.rule=Host(`${APP_DOMAIN}`) && PathPrefix(`/`)
      - traefik.http.routers.web-server.entrypoints=websecure
      - traefik.http.routers.web-server.tls.certresolver=letsencript-resolver
    volumes:
      - ./public/index.php:/usr/share/nginx/html/index.php
      - ./.docker/services/nginx/config/default.conf:/etc/nginx/conf.d/default.conf

  app:
    <<: *app-common
    environment:
      CONTAINER_ROLE: "app"
    env_file:
      - .env
    depends_on:
      - mysql

  scheduler:
    <<: *app-common
    environment:
      CONTAINER_ROLE: "scheduler"
    env_file:
      - .env
    depends_on:
      - mysql


  mysql:
    image: mysql:8.0
    command:
      --default-authentication-plugin=mysql_native_password
      --performance-schema=OFF
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}


volumes:
  mysql:
    driver: "local"
